# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
openapi: '3.0.3'
info:
  title: Ontology API
  description: This is a really important thing
  version: 1.2.1
servers:
  - url: ''
paths:

  /api/ontology:
    post:
      tags:
        [ ontology ]
      operationId: createOntology
      requestBody:
        description: Authorized Person Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OntologyCreateUpdateDto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/ontology/{ontologyId}:
    get:
      tags:
        [ ontology ]
      operationId: getOntologyById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyViewDto'
        "500":
          description: Internal Server Error
    put:
      tags:
        [ ontology ]
      operationId: updateOntologyById
      requestBody:
        description: Authorized Person Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OntologyCreateUpdateDto'
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
    delete:
      tags:
        [ ontology ]
      operationId: deleteOntologyById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
  /api/ontologies:
    get:
      tags:
        [ ontology ]
      operationId: getOntologyList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyListDto'
        "500":
          description: Internal Server Error

  /api/ontology/{ontologyId}/classes:
    get:
      tags:
        [ class ]
      operationId: getClassList
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassListDto'
        "500":
          description: Internal Server Error

  /api/ontology/{ontologyId}/class:
    post:
      tags:
        [ class ]
      summary: Create class
      description: Create new class
      operationId: createClass
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Class body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassCreateUpdateDto'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error

  /api/ontology/{ontologyId}/class/{classId}:
    get:
      tags:
        [ class ]
      operationId: getClassById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: classId
          in: path
          description: class id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassViewDto'
        "500":
          description: Internal Server Error
    put:
      tags:
        [ class ]
      operationId: updateClassById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: classId
          in: path
          description: instance id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Instance body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassCreateUpdateDto'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
    delete:
      tags:
        [ class ]
      operationId: deleteClassById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: classId
          in: path
          description: class id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error

  /api/ontology/{ontologyId}/instances:
    get:
      tags:
        [ instance ]
      operationId: getInstanceList
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceListDto'
        "500":
          description: Internal Server Error

  /api/ontology/{ontologyId}/instance:
    post:
      tags:
        [ instance ]
      summary: Create instance
      description: Create new instance
      operationId: createInstance
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Instance body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceCreateUpdateDto'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error

  /api/ontology/{ontologyId}/instances/{instanceId}:
    get:
      tags:
        [ instance ]
      operationId: getInstanceById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: instanceId
          in: path
          description: instance id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceViewDto'
        "500":
          description: Internal Server Error
    put:
      tags:
        [ instance ]
      operationId: updateInstanceById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: instanceId
          in: path
          description: instance id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Instance body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceCreateUpdateDto'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
    delete:
      tags:
        [ instance ]
      operationId: deleteInstanceById
      parameters:
        - name: ontologyId
          in: path
          description: ontology id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: instanceId
          in: path
          description: instance id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error

  /api/ontology/file:
    post:
      tags:
        [ ontology ]
      operationId: uploadOntologyOwlXml
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error

components:
  schemas:

    OntologyCreateUpdateDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    OntologyViewDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        iri:
          type: string

    OntologyListDto:
      type: array
      items:
        $ref: '#/components/schemas/OntologyViewDto'

    ClassViewDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        superclassName:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeViewDto'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/RelationViewDto'

    ClassListDto:
      type: array
      items:
        $ref: '#/components/schemas/ClassViewDto'

    ClassCreateUpdateDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        classNames:
          type: string
        attributes:
          type: string
        relations:
          type: string

    AttributeViewDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        range:
          type: string

    RelationViewDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        domain:
          type: string
        range:
          type: string

    InstanceViewDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        classType:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueViewDto'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/RelationInstanceViewDto'

    InstanceCreateUpdateDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        classNames:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueViewDto'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/RelationInstanceViewDto'

    AttributeValueViewDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    RelationInstanceViewDto:
      type: object
      properties:
        name:
          type: string
        classInstanceName:
          type: string

    InstanceListDto:
      type: array
      items:
        $ref: '#/components/schemas/InstanceViewDto'
